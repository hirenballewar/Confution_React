[{"D:\\hku\\React\\confusion\\src\\index.js":"1","D:\\hku\\React\\confusion\\src\\App.js":"2","D:\\hku\\React\\confusion\\src\\reportWebVitals.js":"3","D:\\hku\\React\\confusion\\src\\components\\MenuComponent.js":"4","D:\\hku\\React\\confusion\\src\\shared\\dishes.js":"5","D:\\hku\\React\\confusion\\src\\components\\DishdetailComponent.js":"6","D:\\hku\\React\\confusion\\src\\components\\DishDetailComponent.js":"7","D:\\hku\\React\\confusion\\src\\components\\MainComponent.js":"8","D:\\hku\\React\\confusion\\src\\components\\HeaderComponent.js":"9","D:\\hku\\React\\confusion\\src\\components\\FooterComponent.js":"10","D:\\hku\\React\\confusion\\src\\components\\HomeComponent.js":"11","D:\\hku\\React\\confusion\\src\\components\\ContactComponent.js":"12","D:\\hku\\React\\confusion\\src\\shared\\comments.js":"13","D:\\hku\\React\\confusion\\src\\shared\\leaders.js":"14","D:\\hku\\React\\confusion\\src\\shared\\promotions.js":"15","D:\\hku\\React\\confusion\\src\\components\\AboutComponent.js":"16","D:\\hku\\React\\confusion\\src\\redux\\configureStore.js":"17","D:\\hku\\React\\confusion\\src\\redux\\dishes.js":"18","D:\\hku\\React\\confusion\\src\\redux\\comments.js":"19","D:\\hku\\React\\confusion\\src\\redux\\promotions.js":"20","D:\\hku\\React\\confusion\\src\\redux\\leaders.js":"21","D:\\hku\\React\\confusion\\src\\redux\\ActionTypes.js":"22","D:\\hku\\React\\confusion\\src\\redux\\ActionCreators.js":"23","D:\\hku\\React\\confusion\\src\\components\\LoadingComponent.js":"24","D:\\hku\\React\\confusion\\src\\redux\\forms.js":"25","D:\\hku\\React\\confusion\\src\\shared\\baseUrl.js":"26"},{"size":643,"mtime":1613316964585,"results":"27","hashOfConfig":"28"},{"size":539,"mtime":1613931302518,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1608902858195,"results":"30","hashOfConfig":"28"},{"size":2314,"mtime":1614469750417,"results":"31","hashOfConfig":"28"},{"size":1490,"mtime":1613393439753,"results":"32","hashOfConfig":"28"},{"size":2083,"mtime":1612773197140,"results":"33","hashOfConfig":"28"},{"size":8139,"mtime":1614472452356,"results":"34","hashOfConfig":"28"},{"size":3591,"mtime":1614511348479,"results":"35","hashOfConfig":"28"},{"size":5225,"mtime":1613914141841,"results":"36","hashOfConfig":"28"},{"size":2639,"mtime":1613335338781,"results":"37","hashOfConfig":"28"},{"size":1677,"mtime":1614512017209,"results":"38","hashOfConfig":"28"},{"size":10997,"mtime":1614432798684,"results":"39","hashOfConfig":"28"},{"size":4280,"mtime":1613393500078,"results":"40","hashOfConfig":"28"},{"size":2382,"mtime":1613393532857,"results":"41","hashOfConfig":"28"},{"size":445,"mtime":1613393572134,"results":"42","hashOfConfig":"28"},{"size":4491,"mtime":1613647467777,"results":"43","hashOfConfig":"28"},{"size":798,"mtime":1614431977937,"results":"44","hashOfConfig":"28"},{"size":606,"mtime":1614426619631,"results":"45","hashOfConfig":"28"},{"size":553,"mtime":1614472187386,"results":"46","hashOfConfig":"28"},{"size":683,"mtime":1614469290012,"results":"47","hashOfConfig":"28"},{"size":187,"mtime":1614332956439,"results":"48","hashOfConfig":"28"},{"size":413,"mtime":1614468022232,"results":"49","hashOfConfig":"28"},{"size":4096,"mtime":1614511942197,"results":"50","hashOfConfig":"28"},{"size":256,"mtime":1614427096380,"results":"51","hashOfConfig":"28"},{"size":170,"mtime":1614431673208,"results":"52","hashOfConfig":"28"},{"size":48,"mtime":1614461909023,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"d88lcy",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"D:\\hku\\React\\confusion\\src\\index.js",[],["111","112"],"D:\\hku\\React\\confusion\\src\\App.js",[],"D:\\hku\\React\\confusion\\src\\reportWebVitals.js",[],"D:\\hku\\React\\confusion\\src\\components\\MenuComponent.js",[],"D:\\hku\\React\\confusion\\src\\shared\\dishes.js",[],["113","114"],"D:\\hku\\React\\confusion\\src\\components\\DishdetailComponent.js",[],"D:\\hku\\React\\confusion\\src\\components\\DishDetailComponent.js",["115","116","117"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n    const RenderDish = ({dish}) => {\r\n        return (\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n    };\r\n\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if (comments != null) {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                <ul>\r\n                    {comments.map((comment)=>{\r\n                        return(\r\n                            <li key={comment.id} className=\"list-unstyled\">\r\n                                <p>{comment.comment}</p>\r\n                                <p> -- {comment.author} ,\r\n                                    {\" \"} {new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\", month: \"short\", day: \"2-digit\" }).format(new Date(Date.parse(comment.date)))}\r\n                                </p>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n\r\n                ); \r\n        } else {\r\n                return(\r\n                    <div></div>\r\n                );\r\n            }\r\n    };\r\n\r\n\r\n\r\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n    const minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n    class CommentForm extends Component{\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n        }\r\n\r\n        toggleModal() {\r\n            this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n\r\n        handleSubmit(values){\r\n            this.toggleModal();\r\n            this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n\r\n\r\n        }\r\n        \r\n        render() {\r\n            return(\r\n                <div>\r\n                    <Button outline onClick={this.toggleModal} ><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm inline>\r\n                                <Row className=\"form-group\">\r\n                                    <Col>\r\n                                        <Label htmlFor=\"rating\">Rating</Label>\r\n                                            <Control.select model=\".rating\" name=\"rating\"\r\n                                                className=\"form-control\">\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                            </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col>\r\n                                        <Label htmlFor=\"name\" >Your Name</Label>\r\n                                        <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                            placeholder=\"Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                            minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".name\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                minLength: 'Must be greater than 3 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col>\r\n                                        <Label htmlFor=\"message\" >Comment</Label>\r\n                                        <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                            rows=\"6\"\r\n                                            className=\"form-control\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col>\r\n                                        <Button type=\"submit\" color=\"primary\" onClick={this.toggleModal} > Submit </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    \r\n        \r\n    \r\n    const Dishdetail = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null) \r\n\r\n        if (props.dish != null){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderDish dish={props.dish} />\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n      />\r\n                                                     \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else { return( <div></div> )}\r\n    }\r\n\r\n\r\n\r\nexport default Dishdetail;","D:\\hku\\React\\confusion\\src\\components\\MainComponent.js",["118"],"D:\\hku\\React\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\hku\\React\\confusion\\src\\components\\FooterComponent.js",[],"D:\\hku\\React\\confusion\\src\\components\\HomeComponent.js",[],"D:\\hku\\React\\confusion\\src\\components\\ContactComponent.js",["119","120","121","122","123","124","125","126","127"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    \r\n    }\r\n  \r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","D:\\hku\\React\\confusion\\src\\shared\\comments.js",[],"D:\\hku\\React\\confusion\\src\\shared\\leaders.js",[],"D:\\hku\\React\\confusion\\src\\shared\\promotions.js",[],"D:\\hku\\React\\confusion\\src\\components\\AboutComponent.js",["128"],"import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction RenderLeader({leaders}) {\r\n    return (\r\n        leaders.map((leader) => {\r\n            return (\r\n                <Media>\r\n                <Media left>\r\n                    <Media object src={leader.image} alt={leader.name}>\r\n                    </Media>\r\n                </Media>\r\n                <Media body className=\"ml-2\">\r\n                    <Media heading>\r\n                        {leader.name}\r\n                    </Media>\r\n                    <p>{leader.designation}</p>\r\n                    <br />\r\n                    <p>{leader.description}</p>\r\n                </Media>\r\n            </Media>\r\n            )\r\n        })\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <p>Leader {leader.name}</p>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <RenderLeader leaders={props.leaders} />\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","D:\\hku\\React\\confusion\\src\\redux\\configureStore.js",[],"D:\\hku\\React\\confusion\\src\\redux\\dishes.js",[],"D:\\hku\\React\\confusion\\src\\redux\\comments.js",[],"D:\\hku\\React\\confusion\\src\\redux\\promotions.js",[],"D:\\hku\\React\\confusion\\src\\redux\\leaders.js",[],"D:\\hku\\React\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\hku\\React\\confusion\\src\\redux\\ActionCreators.js",["129"],"D:\\hku\\React\\confusion\\src\\components\\LoadingComponent.js",[],"D:\\hku\\React\\confusion\\src\\redux\\forms.js",[],"D:\\hku\\React\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"134"},{"ruleId":"132","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":90,"column":45,"nodeType":"138","endLine":91,"endColumn":74},{"ruleId":"136","severity":1,"message":"139","line":103,"column":41,"nodeType":"138","endLine":109,"endColumn":43},{"ruleId":"136","severity":1,"message":"140","line":124,"column":41,"nodeType":"138","endLine":126,"endColumn":72},{"ruleId":"141","severity":1,"message":"142","line":38,"column":3,"nodeType":"143","messageId":"144","endLine":42,"endColumn":4},{"ruleId":"145","severity":1,"message":"146","line":4,"column":33,"nodeType":"147","messageId":"148","endLine":4,"endColumn":40},{"ruleId":"149","severity":1,"message":"150","line":68,"column":29,"nodeType":"138","endLine":68,"endColumn":71},{"ruleId":"136","severity":1,"message":"139","line":82,"column":37,"nodeType":"138","endLine":88,"endColumn":44},{"ruleId":"136","severity":1,"message":"139","line":104,"column":37,"nodeType":"138","endLine":110,"endColumn":44},{"ruleId":"136","severity":1,"message":"139","line":126,"column":37,"nodeType":"138","endLine":132,"endColumn":44},{"ruleId":"136","severity":1,"message":"139","line":149,"column":37,"nodeType":"138","endLine":155,"endColumn":44},{"ruleId":"136","severity":1,"message":"151","line":171,"column":45,"nodeType":"138","endLine":173,"endColumn":52},{"ruleId":"136","severity":1,"message":"137","line":179,"column":37,"nodeType":"138","endLine":180,"endColumn":66},{"ruleId":"136","severity":1,"message":"140","line":189,"column":37,"nodeType":"138","endLine":191,"endColumn":68},{"ruleId":"145","severity":1,"message":"152","line":30,"column":11,"nodeType":"147","messageId":"148","endLine":30,"endColumn":18},{"ruleId":"145","severity":1,"message":"153","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":16},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],["154"],["155"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'leaders' is assigned a value but never used.","'DISHES' is defined but never used.","no-global-assign","no-unsafe-negation"]